{"ast":null,"code":"import data from \"../data.json\";\nfunction transform(date) {\n  return new Date(date).getTime();\n}\nfunction addWeeks(weeks) {\n  let date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date();\n  date.setDate(date.getDate() + weeks * 7);\n  return date;\n}\nexport const checkAvailability = (roomId, startTime, endTime) => {\n  let filterRoom = data.filter(item => item.roomId === roomId);\n  for (let index = 0; index < filterRoom.length; index++) {\n    if (transform(filterRoom[index].startTime) <= transform(startTime) && transform(startTime) < transform(filterRoom[index].endTime)) {\n      return false;\n    } else if (transform(startTime) < transform(filterRoom[index].endTime) && transform(endTime) > transform(filterRoom[index].startTime)) {\n      return false;\n    }\n  }\n  return true;\n};\nexport const getBookingsForWeek = _ref => {\n  let {\n    now,\n    roomId,\n    weekNo\n  } = _ref;\n  let nowAddWeek = addWeeks(weekNo, now);\n  let filterRoom = data.filter(item => item.roomId === roomId && transform(item.startTime) > transform(now) && transform(item.startTime) < transform(nowAddWeek));\n  return filterRoom.sort((a, b) => transform(a.startTime) < transform(b.startTime));\n};\nexport const getBookingsForNextWeek = roomId => {\n  let now = new Date(\"2019-09-22\").setDate(new Date(\"2019-09-22\").getDate() + 7);\n  let nextWeek = new Date(\"2019-09-22\").setDate(new Date(\"2019-09-22\").getDate() + 7);\n  let nowAddWeek = addWeeks(1, new Date(nextWeek));\n  let filterRoom = data.filter(item => item.roomId === roomId && transform(item.startTime) > transform(now) && transform(item.startTime) < transform(nowAddWeek));\n  return filterRoom.sort((a, b) => transform(a.startTime) < transform(b.startTime));\n};","map":{"version":3,"names":["data","transform","date","Date","getTime","addWeeks","weeks","arguments","length","undefined","setDate","getDate","checkAvailability","roomId","startTime","endTime","filterRoom","filter","item","index","getBookingsForWeek","_ref","now","weekNo","nowAddWeek","sort","a","b","getBookingsForNextWeek","nextWeek"],"sources":["/Users/natthawut_sae/Documents/learning/forviz/src/util/index.js"],"sourcesContent":["import data from \"../data.json\";\nfunction transform(date) {\n  return new Date(date).getTime();\n}\n\nfunction addWeeks(weeks, date = new Date()) {\n  date.setDate(date.getDate() + weeks * 7);\n  return date;\n}\n\nexport const checkAvailability = (roomId, startTime, endTime) => {\n  let filterRoom = data.filter((item) => item.roomId === roomId);\n  for (let index = 0; index < filterRoom.length; index++) {\n    if (\n      transform(filterRoom[index].startTime) <= transform(startTime) &&\n      transform(startTime) < transform(filterRoom[index].endTime)\n    ) {\n      return false;\n    } else if (\n      transform(startTime) < transform(filterRoom[index].endTime) &&\n      transform(endTime) > transform(filterRoom[index].startTime)\n    ) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const getBookingsForWeek = ({ now, roomId, weekNo }) => {\n  let nowAddWeek = addWeeks(weekNo, now);\n  let filterRoom = data.filter(\n    (item) =>\n      item.roomId === roomId &&\n      transform(item.startTime) > transform(now) &&\n      transform(item.startTime) < transform(nowAddWeek)\n  );\n  return filterRoom.sort(\n    (a, b) => transform(a.startTime) < transform(b.startTime)\n  );\n};\n\nexport const getBookingsForNextWeek = (roomId) => {\n  let now = new Date(\"2019-09-22\").setDate(\n    new Date(\"2019-09-22\").getDate() + 7\n  );\n  let nextWeek = new Date(\"2019-09-22\").setDate(\n    new Date(\"2019-09-22\").getDate() + 7\n  );\n  let nowAddWeek = addWeeks(1, new Date(nextWeek));\n\n  let filterRoom = data.filter(\n    (item) =>\n      item.roomId === roomId &&\n      transform(item.startTime) > transform(now) &&\n      transform(item.startTime) < transform(nowAddWeek)\n  );\n  return filterRoom.sort(\n    (a, b) => transform(a.startTime) < transform(b.startTime)\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}